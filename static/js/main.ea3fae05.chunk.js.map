{"version":3,"sources":["constants.ts","components/Status.tsx","components/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ALPHABET","split","Status","props","className","aria-hidden","classNames","incorrect","MAX_INCORRECT","Game","game","data","reloadGame","useState","correct","setCorrect","setIncorrect","answer","useMemo","word","map","char","toUpperCase","guessLetter","useCallback","letter","length","includes","resetGame","showTheWord","useEffect","handleKeyUp","e","key","window","addEventListener","removeEventListener","letters","join","handleLetterClick","currentTarget","value","gameIsLost","gameIsInProgress","definition","style","color","type","onClick","disabled","App","setData","loadGameData","undefined","fetch","then","response","json","catch","error","console","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQACaA,EAAW,6BAA6BC,MAAM,I,sCCQpD,SAASC,EAAQC,GACtB,OACE,qBAAKC,UAAU,SAASC,cAAY,OAApC,SACE,qBAAKD,UAAU,UAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAWE,IAAW,CACzB,MAAQ,EACR,OAAUH,EAAMI,UAAaC,MAE/B,qBAAKJ,UAAWE,IAAW,CACzB,OAAS,EACT,OAAUH,EAAMI,UAAaC,MAE/B,qBAAKJ,UAAWE,IAAW,CACzB,KAAO,EACP,MAAQ,EACR,OAAUH,EAAMI,UAAaC,MAE/B,qBAAKJ,UAAWE,IAAW,CACzB,KAAO,EACP,OAAS,EACT,OAAUH,EAAMI,UAAaC,MAE/B,qBAAKJ,UAAWE,IAAW,CACzB,KAAO,EACP,MAAQ,EACR,OAAUH,EAAMI,UAAaC,MAE/B,qBAAKJ,UAAWE,IAAW,CACzB,MAAQ,EACR,MAAQ,EACR,OAAUH,EAAMI,UAAaC,MAE/B,qBAAKJ,UAAWE,IAAW,CACzB,KAAO,EACP,OAAS,EACT,OAAUH,EAAMI,UAAaC,MAE/B,qBAAKJ,UAAWE,IAAW,CACzB,MAAQ,EACR,OAAS,EACT,OAAUH,EAAMI,UDlDC,a,MEatB,SAASE,EAAMN,GACpB,IAAMO,EAAOP,EAAMQ,KACbC,EAAaT,EAAMS,WAFa,EAIRC,mBAAmB,IAJX,mBAI/BC,EAJ+B,KAItBC,EAJsB,OAKJF,mBAAmB,IALf,mBAK/BN,EAL+B,KAKpBS,EALoB,KAOhCC,EAASC,mBAAQ,kBAAMR,EAAOA,EAAKS,KAAKlB,MAAM,IAAImB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,iBAAiB,KAAI,CAACZ,IAEzFa,EAAcC,uBAAY,SAACC,GFtBN,IEuBrBlB,EAAUmB,QAA6B1B,EAAS2B,SAASF,KAElDR,EAAOU,SAASF,KAAYX,EAAQa,SAASF,GACtDV,EAAW,GAAD,mBAAKD,GAAL,CAAcW,KACdlB,EAAUoB,SAASF,IAC7BT,EAAa,GAAD,mBAAKT,GAAL,CAAgBkB,QAE7B,CAACV,EAAYC,EAAcT,EAAWO,EAASG,IAE5CW,EAAYJ,uBAAY,WAC5BR,EAAa,IACbD,EAAW,IACXH,MACC,CAACI,EAAcD,EAAYH,IAExBiB,EAAcL,uBAAY,WAC9BT,EAAW,YAAIE,MACd,CAACF,EAAYE,IAEhBa,qBAAU,WACR,IAAMC,EAAc,SAACC,GACL,WAAVA,EAAEC,KAAkBL,IACxBL,EAAYS,EAAEC,IAAIX,gBAGpB,OADAY,OAAOC,iBAAiB,QAASJ,GAC1B,kBAAMG,OAAOE,oBAAoB,QAASL,MAChD,CAACR,EAAaK,EAAWC,IAG5B,IAAMQ,EAAUpB,EAAOG,KAAI,SAAAC,GACzB,OAAIP,EAAQa,SAASN,IAASd,EAAUmB,QFrDf,EEsDhBL,EAEA,OAERiB,KAAK,KAEFC,EAAoB,SAACP,GACzBT,EAAYS,EAAEQ,cAAcC,QAGxBC,EAAanC,EAAUmB,QFhEF,EEiErBiB,EAAmBN,EAAQV,SAAS,OAASe,EAEnD,OACE,sBAAKtC,UAAU,OAAf,UACE,cAAC,EAAD,CAAQG,UAAWA,EAAUmB,SAE7B,oBAAGtB,UAAU,aAAb,yBACeM,EAAKkC,cAGlBD,EACA,2DACA,iCACID,EACA,mBAAGG,MAAO,CAAEC,MAAO,OAAnB,oBACA,mBAAGD,MAAO,CAAEC,MAAO,SAAnB,mBAHJ,kBASF,mBAAG1C,UAAU,OAAb,SACGiC,IAGH,4BAEErC,EAASoB,KAAI,SAAAK,GAAM,OACjB,uBACEsB,KAAK,SAELC,QAAST,EACTE,MAAOhB,EACPwB,SAAUnC,EAAQa,SAASF,IAAWlB,EAAUoB,SAASF,IAAWiB,EACpEtC,UAAWE,IAAW,CACpB,QAAU,EACV,QAAWQ,EAAQa,SAASF,GAC5B,UAAalB,EAAUoB,SAASF,MAP7BA,QAcX,wBAAQsB,KAAK,SAASC,QAASnB,EAA/B,2BACA,wBAAQkB,KAAK,SAASC,QAASpB,EAA/B,0C,MCtFSsB,MAhBf,WAAgB,IAAD,EACWrC,qBADX,mBACNF,EADM,KACAwC,EADA,KAGPC,EAAe5B,uBAAY,WAC/B2B,OAAQE,GACRC,MHXmB,4CGYhBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA5C,GAAI,OAAIwC,EAAQxC,EAAK,OAC1B+C,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,QAC/B,CAACR,IAIJ,OAFArB,qBAAU,WAAQsB,MAAmB,CAACA,IAE9BzC,EAAO,cAAC,EAAD,CAAMA,KAAMA,EAAMC,WAAYwC,IAAmB,qBAAKhD,UAAU,UAAf,mCCPnDyD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ea3fae05.chunk.js","sourcesContent":["export const MAX_INCORRECT = 8;\nexport const ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\nexport const API_URL = \"https://random-words-api.vercel.app/word\";\n","import React from 'react';\nimport classNames from 'classnames';\nimport { MAX_INCORRECT } from '../constants';\nimport './Status.css';\n\ninterface StatusProps {\n  incorrect: number\n}\n\nexport function Status (props: StatusProps) {\n  return (\n    <div className=\"Status\" aria-hidden=\"true\">\n      <div className=\"Gallows\" >\n        <div className=\"Man\">\n          <div className={classNames({\n            'head': true,\n            'hidden': props.incorrect < (MAX_INCORRECT - 7)\n          })}></div>\n          <div className={classNames({\n            'torso': true,\n            'hidden': props.incorrect < (MAX_INCORRECT - 6)\n          })}></div>\n          <div className={classNames({\n            'arm': true,\n            'left': true,\n            'hidden': props.incorrect < (MAX_INCORRECT - 5)\n          })}></div>\n          <div className={classNames({\n            'arm': true,\n            'right': true,\n            'hidden': props.incorrect < (MAX_INCORRECT - 4)\n          })}></div>\n          <div className={classNames({\n            'leg': true,\n            'left': true,\n            'hidden': props.incorrect < (MAX_INCORRECT - 3)\n          })}></div>\n          <div className={classNames({\n            'foot': true,\n            'left': true,\n            'hidden': props.incorrect < (MAX_INCORRECT - 2)\n          })}></div>\n          <div className={classNames({\n            'leg': true,\n            'right': true,\n            'hidden': props.incorrect < (MAX_INCORRECT - 1)\n          })}></div>\n          <div className={classNames({\n            'foot': true,\n            'right': true,\n            'hidden': props.incorrect < MAX_INCORRECT\n          })}></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport classNames from 'classnames';\n\nimport { MAX_INCORRECT, ALPHABET }  from '../constants';\nimport { GameData } from '../types';\nimport { Status } from './Status';\nimport './Game.css';\n\ninterface GameProps {\n  data: GameData;\n  reloadGame: () => void\n}\n\nexport function Game (props: GameProps) {\n  const game = props.data;\n  const reloadGame = props.reloadGame;\n\n  const [correct, setCorrect] = useState<string[]>([]);\n  const [incorrect, setIncorrect] = useState<string[]>([]);\n\n  const answer = useMemo(() => game ? game.word.split('').map(char => char.toUpperCase()) : [], [game]);\n\n  const guessLetter = useCallback((letter: string) => {\n    if (incorrect.length === MAX_INCORRECT || !ALPHABET.includes(letter)) {\n      return;\n    } else if (answer.includes(letter) && !correct.includes(letter)) {\n      setCorrect([...correct, letter])\n    } else if (!incorrect.includes(letter)) {\n      setIncorrect([...incorrect, letter])\n    }\n  }, [setCorrect, setIncorrect, incorrect, correct, answer]);\n\n  const resetGame = useCallback(() => {\n    setIncorrect([]);\n    setCorrect([]);\n    reloadGame();\n  }, [setIncorrect, setCorrect, reloadGame]);\n\n  const showTheWord = useCallback(() => {\n    setCorrect([...answer]);\n  }, [setCorrect, answer]);\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') resetGame();\n      guessLetter(e.key.toUpperCase());\n    };\n    window.addEventListener('keyup', handleKeyUp);\n    return () => window.removeEventListener('keyup', handleKeyUp);\n  }, [guessLetter, resetGame, showTheWord]);\n\n\n  const letters = answer.map(char => {\n    if (correct.includes(char) || incorrect.length >= MAX_INCORRECT) {\n      return char;\n    } else {\n      return '_';\n    }\n  }).join(' ');\n\n  const handleLetterClick = (e: React.MouseEvent<HTMLInputElement>) => {\n    guessLetter(e.currentTarget.value);\n  };\n\n  const gameIsLost = incorrect.length >= MAX_INCORRECT;\n  const gameIsInProgress = letters.includes('_') && !gameIsLost;\n\n  return (\n    <div className=\"Game\">\n      <Status incorrect={incorrect.length} />\n\n      <p className=\"Definition\">\n        Definition: {game.definition}\n      </p>\n\n      { gameIsInProgress ?\n        <span>Can you guess the word?</span> :\n        <span>\n          { gameIsLost ?\n            <b style={{ color: 'red' }}>Oops! </b> :\n            <b style={{ color: 'green' }}>Yay! </b>\n          }\n          The word is:\n        </span>\n      }\n\n      <p className=\"Word\">\n        {letters}\n      </p>\n\n      <p>\n      {\n        ALPHABET.map(letter =>\n          <input\n            type=\"button\"\n            key={letter}\n            onClick={handleLetterClick}\n            value={letter}\n            disabled={correct.includes(letter) || incorrect.includes(letter) || gameIsLost}\n            className={classNames({\n              'Letter': true,\n              'correct': correct.includes(letter),\n              'incorrect': incorrect.includes(letter)\n            })}\n          />\n        )\n      }\n      </p>\n\n      <button type=\"button\" onClick={showTheWord}>Show the word</button>\n      <button type=\"button\" onClick={resetGame}>Try a new word  (ESC key)</button>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { API_URL }  from './constants';\nimport { GameData } from './types';\nimport { Game } from './components/Game'\n\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState<GameData | undefined>();\n\n  const loadGameData = useCallback(() => {\n    setData(undefined);\n    fetch(API_URL)\n      .then(response => response.json())\n      .then(data => setData(data[0]))\n      .catch(error => console.error(error));\n  }, [setData]);\n\n  useEffect(() => { loadGameData(); }, [loadGameData]);\n\n  return (data ? <Game data={data} reloadGame={loadGameData} /> : <div className=\"Loading\">Loading game data...</div>);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Start the mocking conditionally.\n// if (process.env.NODE_ENV === 'development') {\n//   const { worker } = require('./mocks/browser')\n//   worker.start()\n// }\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}